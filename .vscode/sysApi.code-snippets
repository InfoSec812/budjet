{
  // Place your budjet workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  //   "scope": "javascript,typescript",
  //   "prefix": "log",
  //   "body": [
  //     "console.log('$1');",
  //     "$2"
  //   ],
  //   "description": "Log output to console"
  // }
  "Init System API": {
    "scope": "typescript",
    "prefix": "dwsysapi",
    "body": [
    "const healthStatus = ref(false);",
    "const healthApi = new SystemApi();",
      "",
    "healthApi.checkHealth()",
    "  .then((res) => {",
    "    if (res.status == 200) {",
    "      healthStatus.value = true;",
    "      return",
    "    }",
    "    healthStatus.value = false;",
    "  }).catch((err) => {",
    "    healthStatus.value = false;",
    "    console.log(`Error with health status: ${JSON.stringify(err)}`);",
    "  });",
    ""
    ]
  },
  "Add computed Health style": {
    "scope": "typescript",
    "prefix": "dwhealth",
    "body": [
      "healthIndicator: computed(() => {",
      "    if (healthStatus.value) {",
      "      return 'color: #00FF00';",
      "    }",
      "    return 'color: #FF0000';",
      "  })"
    ]
  },
  "Add Health indicator": {
    "prefix": "dwindicator",
    "body": [
      "<div :style=\"healthIndicator\">â¬¤</div>"
    ]
  },
  "Create Bill types": {
    "prefix": "dwbill",
    "body": [
    "NewBill:",
    "  type: object",
    "  required:",
    "  - name",
    "  - amount",
    "  - due_date",
    "  - currency",
    "  properties:",
    "    id:",
    "      type: string",
    "      format: uuid",
    "    name:",
    "      type: string",
    "    amount:",
    "      type: number",
    "      minimum: 0",
    "      maximum: 3000",
    "      multipleOf: 0.01",
    "    due_date:",
    "      type: integer",
    "      format: int64",
    "      minimum: 1",
    "      maximum: 31",
    "    late_date:",
    "      type: integer",
    "      format: int64",
    "      minimum: 1",
    "      maximum: 31",
    "    periodicity:",
    "      type: string",
    "      enum:",
    "      - monthly",
    "      - bimonthly",
    "      - weekly",
    "      - quarterly",
    "      - semiannually",
    "      - annually",
    "      default: monthly",
    "    start_date:",
    "      type: string",
    "      format: date",
    "    link:",
    "      type: string",
    "      format: uri",
    "    currency:",
    "      type: string",
    "      enum:",
    "      - USD",
    "      - EUR",
    "      - GBP",
    "      default: 'USD'",
    "Bill:",
    "  type: object",
    "  required:",
    "  - id",
    "  - name",
    "  - amount",
    "  - due_date",
    "  allOf:",
    "  - \\$ref: '#/components/schemas/NewBill'"
    ]
  },
  "Bill get/post": {
    "prefix": "dwbillget",
    "body": [
		"/bills:",
		"  get:",
		"    operationId: getAllBills",
		"    description: Retrieve an array of all Bills ordered by next due date",
		"    tags:",
		"    - bills",
		"    responses:",
		"      '200':",
		"        description: 'OK'",
		"        content:",
		"          application/json:",
		"            schema:",
		"              type: array",
		"              items:",
		"                \\$ref: '#/components/schemas/Bill'",
		"              minItems: 0",
		"      default:",
		"        \\$ref: '#/components/responses/Error'",
		"    parameters:",
		"      - in: query",
		"        name: startDate",
		"        schema:",
		"          type: string",
		"          format: date",
		"          nullable: true",
		"        required: false",
		"      - in: query",
		"        name: endDate",
		"        schema:",
		"          type: string",
		"          format: date",
		"          nullable: true",
		"        required: false",
		"  post:",
		"    operationId: addBill",
		"    description: Adds a new bill item to the system",
		"    tags:",
		"    - bills",
		"    requestBody:",
		"      content:",
		"        application/json:",
		"          schema:",
		"            \\$ref: '#/components/schemas/NewBill'",
		"    responses:",
		"      '201':",
		"        description: 'CREATED'",
		"        content:",
		"          application/json:",
		"            schema:",
		"              \\$ref: '#/components/schemas/Bill'",
		"      default:",
		"        \\$ref: '#/components/responses/Error'"
    ]
  },
  "Bill update/delete": {
    "prefix": "dwbilldelete",
	"body": [
        "/bill/{id}:",
        "  get:",
        "    operationId: getBill",
        "    description: Retrieve the Bill specified by the ID",
        "    tags:",
        "    - bills",
        "    responses:",
        "      '200':",
        "        description: 'OK'",
        "        content:",
        "          application/json:",
        "            schema:",
        "              \\$ref: '#/components/schemas/Bill'",
        "      default:",
        "        \\$ref: '#/components/responses/Error'",
        "  put:",
        "    operationId: updateBill",
        "    description: Updates the details about a bill item in the system",
        "    tags:",
        "    - bills",
        "    requestBody:",
        "      content:",
        "        application/json:",
        "          schema:",
        "            \\$ref: '#/components/schemas/Bill'",
        "    responses:",
        "      '202':",
        "        description: 'ACCEPTED'",
        "        content:",
        "          application/json:",
        "            schema:",
        "              \\$ref: '#/components/schemas/Bill'",
        "      default:",
        "        \\$ref: '#/components/responses/Error'",
        "  delete:",
        "    operationId: deleteBill",
        "    description: Delete the Bill specified by the ID",
        "    tags:",
        "    - bills",
        "    responses:",
        "      '204':",
        "        description: 'NO CONTENT'",
        "      default:",
        "        \\$ref: '#/components/responses/Error'",
        "  parameters:",
        "    - in: path",
        "      required: true",
        "      name: id",
        "      schema:",
        "        type: string",
        "        format: uuid"
	]
  }
}