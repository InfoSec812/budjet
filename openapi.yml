---
openapi: 3.0.2
info:
  title: My App
  version: 1.0.0
  description: My Application
servers:
  - url: "http://{domain}:{port}{base_path}"
    description: "API URL"
    variables:
      base_path:
        enum:
          - /
          - /api/v1
        default: /
      domain:
        enum:
          - localhost
        default: localhost
      port:
        enum:
          - '7080'
        default: '7080'
tags:
  - name: system
  - name: bills
  - name: income
  - name: cashflow
paths:
  /user/current:
    get:
      description: Get the currently logged in user
      operationId: getCurrentUser
      tags:
      - system
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /bills:
    get:
      operationId: getAllBills
      description: Retrieve an array of all Bills ordered by next due date
      # security:
      #   - Keycloak: ['view', 'edit', 'admin']
      tags:
      - bills
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Bill'
                minItems: 0
        default:
          $ref: '#/components/responses/Error'
      parameters:
        - in: query
          name: startDate
          schema:
            type: string
            format: date
            nullable: true
          required: false
        - in: query
          name: endDate
          schema:
            type: string
            format: date
            nullable: true
          required: false
    post:
      operationId: addBill
      description: Adds a new bill item to the system
      # security:
      #   - Keycloak: ['edit', 'admin']
      tags:
      - bills
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBill'
      responses:
        '201':
          description: 'CREATED'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
        default:
          $ref: '#/components/responses/Error'
  /bills/due:
    get:
      operationId: getDueBills
      description: Returns Bills along with Month information for due dates
      tags:
      - bills
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
        default:
          $ref: '#/components/responses/Error'
  /bill/{id}:
    get:
      operationId: getBill
      description: Retrieve the Bill specified by the ID
      # security:
      #   - Keycloak: ['view', 'edit', 'admin']
      tags:
      - bills
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
        default:
          $ref: '#/components/responses/Error'
    put:
      operationId: updateBill
      description: Updates the details about a bill item in the system
      # security:
      #   - Keycloak: ['edit', 'admin']
      tags:
      - bills
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bill'
      responses:
        '202':
          description: 'ACCEPTED'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
        default:
          $ref: '#/components/responses/Error'
    delete:
      operationId: deleteBill
      description: Delete the Bill specified by the ID
      # security:
      #   - Keycloak: ['edit', 'admin']
      tags:
      - bills
      responses:
        '204':
          description: 'NO CONTENT'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - in: path
        required: true
        name: id
        schema:
          type: string
          format: uuid
  /bill/{id}/{year}/{month}:
    put:
      description: Update the paid status for a given month/year for a given bill ID
      operationId: updatePaidStatus
      # security:
      #   - Keycloak: ['edit', 'admin']
      tags:
      - bills
      parameters:
        - in: path
          name: id
          schema:
            type: string
            format: uuid
          required: true
        - in: path
          name: year
          schema:
            type: number
            format: int64
          required: true
        - in: path
          name: month
          schema:
            type: number
            format: int64
          required: true
        - in: query
          name: paid
          schema:
            type: boolean
          required: true
      responses:
        '202':
          description: ACCEPTED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Month'
  /income:
    get:
      operationId: getIncomeSources
      description: Retrieve a list of income sources
      tags:
      - income
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Income'
        default:
          $ref: '#/components/responses/Error'
    post:
      operationId: addIncomeSource
      description: Adds a new income source using the properties of the request body
      tags:
      - income
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewIncome'
      responses:
        '201':
          description: 'CREATED'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Income'
        default:
          $ref: '#/components/responses/Error'
  /income/{id}:
    get:
      operationId: getIncome
      description: Retrieve the Income specified by the ID
      # security:
      #   - Keycloak: ['view', 'edit', 'admin']
      tags:
      - income
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Income'
        default:
          $ref: '#/components/responses/Error'
    put:
      operationId: updateIncome
      description: Updates the details about a income item in the system
      # security:
      #   - Keycloak: ['edit', 'admin']
      tags:
      - income
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Income'
      responses:
        '202':
          description: 'ACCEPTED'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Income'
        default:
          $ref: '#/components/responses/Error'
    delete:
      operationId: deleteIncome
      description: Delete the Income specified by the ID
      # security:
      #   - Keycloak: ['edit', 'admin']
      tags:
      - income
      responses:
        '204':
          description: 'NO CONTENT'
        default:
          $ref: '#/components/responses/Error'
    parameters:
      - in: path
        required: true
        name: id
        schema:
          type: string
          format: uuid
  /cashflow:
    get:
      operationId: getCashFlow
      description: Get the cashflow information for the next few weeks given a starting balance
      tags:
      - cashflow
      parameters:
        - in: query
          required: false
          name: start_date
          schema:
            type: string
            format: date
        - in: query
          required: false
          name: end_date
          schema:
            type: string
            format: date
        - in: query
          required: false
          name: startingBalance
          schema:
            type: number
            multipleOf: 0.01
            default: 0.00
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DailyBalance'
        default:
          $ref: '#/components/responses/Error'
        
  /health:
    get:
      operationId: checkHealth
      tags:
      - system
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        default:
          $ref: '#/components/responses/Error'
components:
  responses:
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
  schemas:
    Errors:
      type: object
      required:
        - code
      properties:
        timestamp:
          type: string
          format: date-time
        msg:
          type: string
        code:
          type: number
          format: int64
    Month:
      type: object
      required:
      - year
      - month
      - day
      - paid
      properties:
        year:
          type: integer
        month:
          type: integer
          minimum: 1
          maximum: 12
          nullable: false
        day:
          type: integer
          minimum: 1
          maximum: 31
        paid:
          type: boolean
          default: false
          nullable: false
    NewBill:
      type: object
      required:
        - name
        - amount
        - due_date
        - currency
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        amount:
          type: number
          minimum: 0
          maximum: 3000
          multipleOf: 0.01
        due_date:
          type: integer
          format: int64
          minimum: 1
          maximum: 31
        late_date:
          type: integer
          format: int64
          minimum: 1
          maximum: 31
        periodicity:
          type: string
          enum:
            - monthly
            - bimonthly
            - weekly
            - quarterly
            - semiannually
            - annually
          default: monthly
        start_date:
          type: string
          format: date
        link:
          type: string
          format: uri
        currency:
          type: string
          enum:
          - USD
          - EUR
          - GBP
          default: 'USD'
    Bill:
      type: object
      required:
        - id
        - name
        - amount
        - due_date
        - months
      allOf:
        - $ref: '#/components/schemas/NewBill'
        - type: object
          properties:
            months:
              type: array
              minItems: 10
              maxItems: 10
              items:
                $ref: '#/components/schemas/Month'
    User:
      type: object
      properties:
        email:
          type: string
          format: email
        name:
          type: string
      additionalProperties: true
    NewIncome:
      type: object
      required:
      - name
      - amount
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        amount:
          type: number
          multipleOf: 0.01
          minimum: 0.00
        period:
          type: string
          enum:
          - weekly
          - biweekly
          - semimonthly
          - monthly
          - quarterly
          - semianually
          - annually
          default: biweekly
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        currency:
          type: string
          enum:
          - 'USD'
          - 'GBP'
          - 'EUR'
          default: 'USD'
    Income:
      type: object
      required:
      - id
      allOf:
        - $ref: '#/components/schemas/NewIncome'
    DailyBalance:
      type: object
      required:
      - date
      - balance
      properties:
        date:
          type: string
          format: date
        balance:
          type: number
          multipleOf: 0.01
        income:
          type: array
          items:
            $ref: '#/components/schemas/Income'
        expenditures:
          type: array
          items:
            $ref: '#/components/schemas/Bill'